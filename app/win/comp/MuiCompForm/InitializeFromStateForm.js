import React from 'react'
import { connect } from 'react-redux'
import { Field, reduxForm } from 'redux-form'
import { load as loadAccount } from './account'
let uuidv4 = require('uuid/v4')

const data = {
  // used to populate 'account' reducer when 'Load' is clicked
  firstName: 'Jane',
  lastName: 'Doe',
  age: '42',
  sex: 'female',
  employed: true,
  favoriteColor: 'blue',
  bio: 'Born to write amazing Redux code.'
}
// const colors = ['Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Indigo', 'Violet']

let selection = {
  selectionTitle: 'Favorite Color',
  name: 'favoriteColor',
  noSelection: 'Select a color...',
  selections: [
    {title: 'Red', value: 'red'},
    {title: 'Blue', value: 'blue'},
    {title: 'Orange', value: 'orange'},
    {title: 'Yellow', value: 'yellow'},
    {title: 'Green', value: 'green'},
    {title: 'Indigo', value: 'indigo'},
    {title: 'Violet', value: 'violet'}
  ]
}

let sexRadio = {
  groupTitle: 'Sex',
  name: 'sex',
  radios: [
    {title: 'Male', value: 'male'},
    {title: 'Female', value: 'female'}
  ]
}

let checkbox = {
  title: 'Employes',
  name: 'employed'
}

let textarea = {
  title: 'Bio',
  name: 'bio'
}

let InputField = (props) => {
  return (
    <div>
      <label>{props.title}</label>
      <div>
        <Field name={props.name} component='input' type={props.type} placeholder={props.title} />
      </div>
    </div>
  )
}

let InputText = (props) => {
  return <InputField type='text' {...props} />
}

let InputNumber = (props) => {
  return <InputField type='number' {...props} />
}

let InputRadioGroup = (props) => {
  let groupTitle = props.radiogroup.groupTitle
  let name = props.radiogroup.name
  let radios = props.radiogroup.radios

  let list = radios.map((radio) => {
    return <label>
      <Field name={name} component='input' type='radio' value={radio.value} />
      {' '}{radio.title}
    </label>
  })
  return <div>
    <label>{groupTitle}</label>
    <div>
      {list}
    </div>
  </div>
}

let InputSelection = (props) => {
  let selection = props.selection
  return <div>
    <label>{selection.title}</label>
    <div>
      <Field name={selection.name} component='select'>
        <option value=''>{selection.noSelection}</option>
        {selection.selections.map(colorOption =>
          <option value={colorOption.value} key={colorOption.title}>
            {colorOption.title}
          </option>
        )}
      </Field>
    </div>
  </div>
}

let InputCheckbox = (props) => {
  let checkbox = props.checkbox
  return <div>
    <label htmlFor={checkbox.name}>{checkbox.title}</label>
    <div>
      <Field name={checkbox.name} id={checkbox.name} component='input' type='checkbox' />
    </div>
  </div>
}

let InputTextArea = (props) => {
  let textarea = props.textarea
  return <div>
    <label>{textarea.title}</label>
    <div>
      <Field name={textarea.name} component='textarea' />
    </div>
  </div>
}

// http://redux-form.com/7.0.4/examples/initializefromstate/
let InitializeFromStateForm = (props) => {
  const { handleSubmit, load, pristine, reset, submitting } = props
  return (
    <form onSubmit={handleSubmit}>
      <div>
        <button type='button' onClick={() => {
          load(data)
          /* The action with data is generated by clicking button here.
          {
            type: LOAD, // action.type
            data // action.data
          }
          */
        }}>
          Load Account Initial Data
        </button>
      </div>
      {/*
      <div>
        <label>First Name</label>
        <div>
          <Field name='firstName' component='input' type='text' placeholder='First Name' />
        </div>
      </div>
      <div>
        <label>Last Name</label>
        <div>
          <Field name='lastName' component='input' type='text' placeholder='Last Name' />
        </div>
      </div>
      <div>
        <label>Age</label>
        <div>
          <Field name='age' component='input' type='number' placeholder='Age' />
        </div>
      </div>
      <div>
        <label>Sex</label>
        <div>
          <label>
            <Field name='sex' component='input' type='radio' value='male' />
            {' '}Male
          </label>
          <label>
            <Field name='sex' component='input' type='radio' value='female' />
            {' '}Female
          </label>
        </div>
      </div>
      <div>
        <label htmlFor='employed'>Employed</label>
        <div>
          <Field name='employed' id='employed' component='input' type='checkbox' />
        </div>
      </div>
      <div>
        <label>Bio</label>
        <div>
          <Field name='bio' component='textarea' />
        </div>
      </div>
      */}
      <InputText name='firstName' title='First Name' />
      <InputText name='lastName' title='Last Name' />
      <InputNumber name='age' title='Age' />
      <InputRadioGroup radiogroup={sexRadio} />
      <InputSelection selection={selection} />
      <InputCheckbox checkbox={checkbox} />
      <InputTextArea textarea={textarea} />
      <div>
        <button type='submit' disabled={pristine || submitting}>
          Submit
        </button>
        <button type='button' disabled={pristine || submitting} onClick={reset}>
          Undo Changes
        </button>
      </div>
    </form>
  )
}

// Decorate with reduxForm(). It will read the initialValues prop provided by connect()
InitializeFromStateForm = reduxForm({
  form: 'initializeFromState' + uuidv4() // a unique identifier for this form
})(InitializeFromStateForm)

// You have to connect() to any reducers that you wish to connect to yourself
InitializeFromStateForm = connect(
  // mapStateToProps
  state => ({
    initialValues: state.account.data // pull initial values from account reducer
  }),
  // mapDispatchToProps
  { load: loadAccount } // bind account loading action creator
)(InitializeFromStateForm)

export default InitializeFromStateForm
